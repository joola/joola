{
  "name": "joola",
  "preferGlobal": false,
  "version": "0.8.6",
  "author": "Joola <info@joo.la>",
  "description": "The open-source data visualization framework",
  "private": false,
  "repository": {
    "type": "git",
    "url": "http://github.com/joola/joola.git"
  },
  "bugs": "http://github.com/joola/joola/issues",
  "contributors": [
    {
      "name": "Itay Weinberger",
      "email": "itay@joo.la",
      "url": "http://joo.la"
    },
    {
      "name": "Or Weinberger",
      "email": "or@joo.la",
      "url": "http://joo.la"
    }
  ],
  "scripts": {
    "start": "node ./joola.js --debug",
    "start:detached": "node ./joola.js --debug &",
    "start:watch": "watch 'node ./joola.js --trace' --wait=1",
    "stop": "killall node",
    "test": "JOOLA_CONFIG_STORE_LOGGER_CONSOLE_LEVEL=trace NODE_CONFIG_DIR=$(pwd)/test/config mocha test/ --reporter spec",
    "test:scenario": "npm run test:scenario:standalone && npm run test:scenario:mongodb && npm run test:scenario:elasticsearch && npm run test:scenario:zookeeper && npm run test:scenario:cluster_node",
    "test:scenario:standalone": "NODE_CONFIG_DIR=$(pwd)/test/config NODE_ENV=standalone npm run test:quiet",
    "test:scenario:mongodb": "NODE_CONFIG_DIR=$(pwd)/test/config NODE_ENV=mongodb npm run test:quiet",
    "test:scenario:elasticsearch": "NODE_CONFIG_DIR=$(pwd)/test/config NODE_ENV=elasticsearch npm run test:quiet",
    "test:scenario:zookeeper": "NODE_CONFIG_DIR=$(pwd)/test/config NODE_ENV=zookeeper npm run test",
    "test:scenario:cluster_node": "NODE_CONFIG_DIR=$(pwd)/test/config NODE_ENV=cluster_node npm run test:quiet",
    "test:scenario:coverage": "npm run test:scenario:standalone:coverage && npm run test:scenario:mongodb:coverage && npm run test:scenario:elasticsearch:coverage && npm run test:scenario:zookeeper:coverage && npm run test:scenario:cluster_node:coverage",
    "test:scenario:standalone:coverage": "redis-cli flushall && JOOLA_CONFIG_STORE_LOGGER_CONSOLE_LEVEL=error NODE_CONFIG_DIR=$(pwd)/test/config NODE_ENV=standalone istanbul cover --dir ./coverage/scenario_standalone ./node_modules/.bin/_mocha -- -R dot test",
    "test:scenario:mongodb:coverage": "redis-cli flushall && JOOLA_CONFIG_STORE_LOGGER_CONSOLE_LEVEL=error NODE_CONFIG_DIR=$(pwd)/test/config NODE_ENV=mongodb istanbul cover --dir ./coverage/scenario_mongodb ./node_modules/.bin/_mocha -- -R dot test",
    "test:scenario:elasticsearch:coverage": "redis-cli flushall && JOOLA_CONFIG_STORE_LOGGER_CONSOLE_LEVEL=error NODE_CONFIG_DIR=$(pwd)/test/config NODE_ENV=elasticsearch istanbul cover --dir ./coverage/scenario_elasticsearch ./node_modules/.bin/_mocha -- -R dot test",
    "test:scenario:zookeeper:coverage": "redis-cli flushall && JOOLA_CONFIG_STORE_LOGGER_CONSOLE_LEVEL=error NODE_CONFIG_DIR=$(pwd)/test/config NODE_ENV=zookeeper istanbul cover --dir ./coverage/scenario_zookeeper ./node_modules/.bin/_mocha -- -R dot test",
    "test:scenario:cluster_node:coverage": "redis-cli flushall && JOOLA_CONFIG_STORE_LOGGER_CONSOLE_LEVEL=error NODE_CONFIG_DIR=$(pwd)/test/config NODE_ENV=cluster_node istanbul cover --dir ./coverage/scenario_cluster_node ./node_modules/.bin/_mocha -- -R dot test",
    "pretest": "npm run lint",
    "test:coverage": "redis-cli flushall && JOOLA_CONFIG_STORE_LOGGER_CONSOLE_LEVEL=error NODE_CONFIG_DIR=$(pwd)/test/config NODE_ENV=coverage istanbul cover ./node_modules/.bin/_mocha -- -R dot test",
    "test:quiet": "JOOLA_CONFIG_STORE_LOGGER_CONSOLE_LEVEL=error mocha test/ --reporter dot",
    "test:md": "JOOLA_CONFIG_STORE_LOGGER_CONSOLE_LEVEL=error mocha test/ --reporter markdown",
    "test:api": "(killall node || true) && redis-cli flushall && NODE_CONFIG_DIR=$(pwd)/test/config NODE_ENV=apiary npm run start:detached && sleep 2 && dredd ./apiary.apib http://localhost:8080",
    "preinstall": "build/scripts/preinstall.sh || true",
    "postinstall": "build/scripts/postinstall.sh || true",
    "publish": "npm run publish:do",
    "publish:do": "npm shrinkwrap && npm publish && rm npm-shrinkwrap.json",
    "publish:patch": "npm run prepublish && npm version patch --git-tag-version=false --sign-git-tag=true -m \"Version bumped to %s\" && npm run publish:do",
    "publish:minor": "npm run prepublish && npm version minor --git-tag-version=false --sign-git-tag=true -m \"Version bumped to %s\" && npm run publish:do",
    "publish:major": "npm run prepublish && npm version major --git-tag-version=false --sign-git-tag=true -m \"Version bumped to %s\" && npm run publish:do",
    "docker:build": "npm run git:check && git checkout docker/latest && (git merge develop || true) && git checkout --ours -- README.md && git add --force -- README.md && (git commit -am \"Merge develop branch on docker/lastest\" || true) && docker build -t joola/joola .",
    "docker:publish": "",
    "vagrant:build": "",
    "vagrant:deploy": "",
    "vagrant:publish": "",
    "gh-pages": "npm run gh-pages:init && npm run gh-pages:docs && npm run gh-pages:site && npm run gh-pages:git",
    "gh-pages:init": "npm run git:check",
    "gh-pages:docs": "npm run gh-pages:docs:cleanup:before && npm run gh-pages:docs:gollum-site && npm run gh-pages:docs:cleanup:after",
    "gh-pages:docs:cleanup:before": "rm -rf ./pages/docs/*",
    "gh-pages:docs:cleanup:after": "rm -rf ./tmp",
    "gh-pages:docs:gollum-site": "npm run gh-pages:docs:gollum-site:init && npm run gh-pages:docs:gollum-site:build && npm run gh-pages:docs:gollum-site:refactor",
    "gh-pages:docs:gollum-site:init": "mkdir -p ./tmp/wiki && cp -R ./wiki/* ./tmp/wiki && cp -R ./build/pages/resources/gollum-site/* ./tmp/wiki",
    "gh-pages:docs:gollum-site:build": "cp -R ./wiki/* ./pages/docs",
    "gh-pages:docs:gollum-site:build.bak": "cd ./tmp/wiki && git init && gollum-site generate --output_path=../../pages/docs --base_path /docs/ --working",
    "gh-pages:docs:gollum-site:refactor": "mv ./pages/docs/Home.md ./pages/docs/index.md",
    "gh-pages:site": "npm run gh-pages:site:cleanup:before && npm run gh-pages:site:jekyll && npm run gh-pages:site:cleanup:after",
    "gh-pages:site:cleanup:before": "rm -rf ./about ./blog ./css ./docs ./demo ./fonts ./gettingstarted ./services ./img ./javascripts ./news ./stylesheets ./feed.xml ./index.html ./params.json",
    "gh-pages:site:cleanup:after": "npm run gh-pages:site:cleanup:before",
    "gh-pages:site:jekyll": "npm run gh-pages:site:jekyll:init && npm run gh-pages:site:jekyll:build && npm run gh-pages:site:jekyll:search-index",
    "gh-pages:site:jekyll:init": "cp -R ./build/pages/resources/jekyll/* ./pages",
    "gh-pages:site:jekyll:build": "cd ./pages && jekyll build",
    "gh-pages:site:jekyll:search-index": "node ./build/pages/build_search_index.js && cp ./pages/docs/search_index.json ./pages/_site/docs/search_index.json",
    "gh-pages:git": "npm run gh-pages:git:branch-and-prep && npm run gh-pages:git:shape&& npm run gh-pages:git:commit && echo npm run gh-pages:git:push",
    "gh-pages:git:branch-and-prep": "(git branch -qD gh-pages || true) && git checkout --orphan gh-pages && git rm -rf --cached . && cp -R ./build/pages/resources/.gitignore ./.gitignore",
    "gh-pages:git:shape": "mv ./pages/_site/* . && rm -rf ./pages/_site",
    "gh-pages:git:commit": "git add . && git commit -am \"updated gh-pages.\"",
    "gh-pages:git:push": "git push -f origin gh-pages",
    "git:commit": "git commit",
    "git:push": "git push",
    "git:check": "count=$(expr $(git status --porcelain 2>/dev/null | egrep \"^(M| M)\" | wc -l)) && if [ $count -ne 0 ]; then echo Git repository is dirty [$count change\\(s\\) found].; exit 1; fi; exit 0",
    "changelist": "github-changes -o joola -r joola --token 864b65f829914e80f16c41d3cb70ad0841344329 --only-pulls --use-commit-body --file HISTORY.md",
    "lint": "jshint --exclude ./lib/webserver/public ./lib ./test",
    "coveralls": "cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js",
    "codeclimate": "CODECLIMATE_REPO_TOKEN=b0cf984d93693c3e827901f766ca1f13b6acca03a3786b5e187356e66e8ffbec codeclimate < ./coverage/lcov.info",
    "env": "env"
  },
  "bin": {
    "joola": "./node_modules/joola.cli/joola",
    "joola-service": "./joola.js"
  },
  "main": "./joola.js",
  "keywords": [
    "data",
    "analytics",
    "big-data",
    "visualization",
    "noSQL"
  ],
  "dependencies": {
    "async": "*",
    "body-parser": "^1.11.0",
    "bunyan": "^1.3.3",
    "bunyan-format": "^0.2.1",
    "bunyan-loggly": "^0.0.5",
    "circular-json": "~0.1.6",
    "cloneextend": "0.0.3",
    "coffee-script": "^1.9.0",
    "compression": "^1.4.0",
    "config": "^1.10.0",
    "connect": "^3.3.4",
    "deep-diff": "^0.3.0",
    "deep-equal": "^1.0.0",
    "describe-json": "^0.0.6",
    "eventemitter2": "*",
    "express": "^4.11.2",
    "hiredis": "^0.2.0",
    "htpasswd": "*",
    "jade": "^1.9.2",
    "joola.cli": "0.0.8",
    "joola.datastore-elasticsearch": "^0.0.3",
    "joola.datastore-embedded": "^0.0.2",
    "joola.datastore-mongodb": "^0.0.14",
    "joola.sdk": "^0.8.2",
    "js-yaml": "^3.2.6",
    "kindof": "~1.0.0",
    "localeval": "^15.2.3",
    "node-zookeeper-client": "^0.2.2",
    "punt": "^2.2.0",
    "querystring": "~0.2.0",
    "redis": "^0.12.0",
    "repl.history": "*",
    "semver": "^4.2.2",
    "serve-favicon": "^2.1.6",
    "sleep": "^2.0.0",
    "socket.io": "^1.3.3",
    "socket.io-client": "^1.3.3",
    "socket.io-redis": "^0.1.3",
    "stomp": "https://github.com/joola/stomp-js/tarball/master",
    "traverse": "http://registry.npmjs.org/traverse/-/traverse-0.6.6.tgz",
    "underscore": "^1.7.0",
    "usage": "^0.6.0"
  },
  "devDependencies": {
    "bench-rest": "^1.0.2",
    "chai": "^1.9.1",
    "cheerio": "^0.18.0",
    "codeclimate-test-reporter": "latest",
    "coveralls": "latest",
    "istanbul": "latest",
    "jsdox": "https://github.com/joola/jsdox/tarball/master",
    "jshint": "latest",
    "mkdirp": "*",
    "mocha": "latest",
    "dredd": "latest",
    "request": "^2.53.0",
    "should": "^5.0.0",
    "sinon": "^1.10.2",
    "sinon-chai": "^2.6.0",
    "socket.io-browserify": "*",
    "zombie": "*",
    "watch": "^0.13.0",
    "github-changes": "latest"
  },
  "engines": {
    "node": "0.10.*"
  },
  "license": "GPL-3.0"
}
